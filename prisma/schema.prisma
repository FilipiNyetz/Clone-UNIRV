// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  phone     String
  studentId String?  @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

model Batch {
  id               String   @id @default(cuid())
  name             String
  availableTickets Int
  active           Boolean
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  Ticket           Ticket[]
}

model Ticket {
  id               String   @id @default(cuid())
  batchId          String
  batch            Batch    @relation(fields: [batchId], references: [id])
  eventName        String
  eventDate        DateTime
  eventLocation    String?
  eventDescription String?
  eventImage       String?
  eventLink        String?
  student_price    Float
  external_price   Float
  active           Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  ticketId  String
  ticket    Ticket      @relation(fields: [ticketId], references: [id])
  status    OrderStatus
  payment   PaymentType
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum PaymentType {
  PIX
  CREDIT_CARD
}

enum OrderStatus {
  PENDIND
  COMPLETED
  CANCELED
}
